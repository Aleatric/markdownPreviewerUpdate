{"ast":null,"code":"var _jsxFileName = \"/Users/bradleycronan/markdownPreviewerUpdate/src/App.js\";\nimport React from \"react\";\nimport { marked, Renderer } from \"marked\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ndocument.body.style = 'background: black;';\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      initialMarkdown: `\n# Heading\n\n## Subheading\n\nThis is a [link](https://example.com).\n\nInline code: \\`console.log('Hello, world!')\\`\n\n\\`\\`\\`\n// Code block\nfunction greet(name) {\n  return \"Hello, \" + name + \"!\";\n}\n\\`\\`\\`\n\n- List item 1\n- List item 2\n\n> This is a blockquote.\n\n![Image](https://example.com/image.jpg)\n\n**This text is bold.**\n\n## Practical Examples\n\n### Creating a Function\n\nTo create a function in JavaScript, you can use the following syntax:\n\n\\`\\`\\`javascript\nfunction functionName(parameter1, parameter2) {\n  // Function body\n  // Do something with the parameters\n  return result;\n}\n\\`\\`\\`\n\n### Styling Text\n\nYou can style text using various Markdown syntax:\n\n- **Bold text**: Wrap the text with double asterisks (\\*\\*).\n- *Italic text*: Wrap the text with single asterisks (\\*).\n- ~~Strikethrough text~~: Wrap the text with double tildes (\\~\\~).\n\n### Creating a List\n\nTo create a list in Markdown, use hyphens (-) or asterisks (\\*) followed by a space:\n\n- List item 1\n- List item 2\n\n### Adding Links\n\nTo add a hyperlink, use the following syntax:\n\n\\[Link Text\\](https://example.com)\n\nReplace \"Link Text\" with the text you want to display and \"https://example.com\" with the actual URL.\n\n### Inserting Images\n\nTo insert an image, use the following syntax:\n\n\\!\\[Alt Text\\](https://example.com/image.jpg)\n\nReplace \"Alt Text\" with the alternative text for the image and \"https://example.com/image.jpg\" with the URL of the image.\n\nThese are just a few practical examples to demonstrate the usage of Markdown. You can explore more Markdown syntax and features to create richly formatted and informative content in your Markdown previewer.\n`,\n      markdown: \"\"\n    };\n  }\n  componentDidMount() {\n    this.resetMarkdown();\n  }\n  updateMarkdown(markdown) {\n    this.setState({\n      markdown\n    });\n  }\n  resetMarkdown() {\n    this.setState({\n      markdown: this.state.initialMarkdown\n    });\n  }\n  render() {\n    const inputStyle = {\n      width: \"100%\",\n      height: \"600px\",\n      padding: \"1rem\",\n      color: \"#A87D19\",\n      backgroundColor: \"black\",\n      border: \"none\",\n      borderStyle: \"dotted\",\n      overflow: \"auto\"\n    };\n    const outputStyle = {\n      width: \"100%\",\n      height: \"600px\",\n      padding: \"1rem\",\n      backgroundColor: \"black\",\n      borderStyle: \"dotted\",\n      overflow: \"auto\"\n    };\n    const buttonStyle = {\n      backgroundColor: \"black\",\n      fontFamily: \"'Courier Prime', monospace\",\n      color: \"#A87D19\",\n      marginTop: \"2rem\"\n    };\n    const containerStyle = {\n      backgroundColor: \"black\",\n      fontFamily: \"'Courier Prime', monospace\",\n      color: \"#A87D19\",\n      display: \"flex\",\n      justifyContent: \"space-between\",\n      flexWrap: \"wrap\",\n      height: \"100vh\",\n      padding: \"3rem\"\n    };\n    const headerStyle = {\n      textAlign: \"center\",\n      marginTop: \"2rem\"\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"markdown P\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: containerStyle,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: \"45%\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: headerStyle,\n            children: /*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \"Markdown Input\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            id: \"editor\",\n            className: \"input\",\n            style: inputStyle,\n            value: this.state.markdown,\n            onChange: e => {\n              this.updateMarkdown(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: \"45%\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: headerStyle,\n            children: /*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \"Preview\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"preview\",\n            className: \"output\",\n            style: outputStyle,\n            dangerouslySetInnerHTML: {\n              __html: marked(this.state.markdown, {\n                renderer: new Renderer()\n              })\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this);\n  }\n}","map":{"version":3,"names":["React","marked","Renderer","jsxDEV","_jsxDEV","document","body","style","App","Component","constructor","props","state","initialMarkdown","markdown","componentDidMount","resetMarkdown","updateMarkdown","setState","render","inputStyle","width","height","padding","color","backgroundColor","border","borderStyle","overflow","outputStyle","buttonStyle","fontFamily","marginTop","containerStyle","display","justifyContent","flexWrap","headerStyle","textAlign","className","children","fileName","_jsxFileName","lineNumber","columnNumber","id","value","onChange","e","target","dangerouslySetInnerHTML","__html","renderer"],"sources":["/Users/bradleycronan/markdownPreviewerUpdate/src/App.js"],"sourcesContent":["import React from \"react\";\nimport { marked, Renderer } from \"marked\";\n\ndocument.body.style = 'background: black;';\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      initialMarkdown: `\n# Heading\n\n## Subheading\n\nThis is a [link](https://example.com).\n\nInline code: \\`console.log('Hello, world!')\\`\n\n\\`\\`\\`\n// Code block\nfunction greet(name) {\n  return \"Hello, \" + name + \"!\";\n}\n\\`\\`\\`\n\n- List item 1\n- List item 2\n\n> This is a blockquote.\n\n![Image](https://example.com/image.jpg)\n\n**This text is bold.**\n\n## Practical Examples\n\n### Creating a Function\n\nTo create a function in JavaScript, you can use the following syntax:\n\n\\`\\`\\`javascript\nfunction functionName(parameter1, parameter2) {\n  // Function body\n  // Do something with the parameters\n  return result;\n}\n\\`\\`\\`\n\n### Styling Text\n\nYou can style text using various Markdown syntax:\n\n- **Bold text**: Wrap the text with double asterisks (\\*\\*).\n- *Italic text*: Wrap the text with single asterisks (\\*).\n- ~~Strikethrough text~~: Wrap the text with double tildes (\\~\\~).\n\n### Creating a List\n\nTo create a list in Markdown, use hyphens (-) or asterisks (\\*) followed by a space:\n\n- List item 1\n- List item 2\n\n### Adding Links\n\nTo add a hyperlink, use the following syntax:\n\n\\[Link Text\\](https://example.com)\n\nReplace \"Link Text\" with the text you want to display and \"https://example.com\" with the actual URL.\n\n### Inserting Images\n\nTo insert an image, use the following syntax:\n\n\\!\\[Alt Text\\](https://example.com/image.jpg)\n\nReplace \"Alt Text\" with the alternative text for the image and \"https://example.com/image.jpg\" with the URL of the image.\n\nThese are just a few practical examples to demonstrate the usage of Markdown. You can explore more Markdown syntax and features to create richly formatted and informative content in your Markdown previewer.\n`,\n      markdown: \"\",\n    };\n  }\n\n  componentDidMount() {\n    this.resetMarkdown();\n  }\n\n  updateMarkdown(markdown) {\n    this.setState({ markdown });\n  }\n\n  resetMarkdown() {\n    this.setState({ markdown: this.state.initialMarkdown });\n  }\n\n  render() {\n    const inputStyle = {\n      width: \"100%\",\n      height: \"600px\",\n      padding: \"1rem\",\n      color: \"#A87D19\",\n      backgroundColor: \"black\",\n      border: \"none\",\n      borderStyle: \"dotted\",\n      overflow: \"auto\",\n    };\n\n    const outputStyle = {\n      width: \"100%\",\n      height: \"600px\",\n      padding: \"1rem\",\n      backgroundColor: \"black\",\n      borderStyle: \"dotted\",\n      overflow: \"auto\",\n    };\n\n    const buttonStyle = {\n      backgroundColor: \"black\",\n      fontFamily: \"'Courier Prime', monospace\",\n      color: \"#A87D19\",\n      marginTop: \"2rem\",\n    };\n\n    const containerStyle = {\n      backgroundColor: \"black\",\n      fontFamily: \"'Courier Prime', monospace\",\n      color: \"#A87D19\",\n      display: \"flex\",\n      justifyContent: \"space-between\",\n      flexWrap: \"wrap\",\n      height: \"100vh\",\n      padding: \"3rem\"\n    };\n\n    const headerStyle = {\n      textAlign: \"center\",\n      marginTop: \"2rem\",\n    };\n\n    return (\n      <div className=\"app\">\n        <h1>markdown P</h1>\n      <div style={containerStyle}>\n        <div style={{ width: \"45%\" }}>\n          <div style={headerStyle}>\n            <h1>Markdown Input</h1>\n          </div>\n          <textarea\n            id=\"editor\"\n            className=\"input\"\n            style={inputStyle}\n            value={this.state.markdown}\n            onChange={(e) => {\n              this.updateMarkdown(e.target.value);\n            }}\n          />\n        </div>\n  \n        <div style={{ width: \"45%\" }}>\n          <div style={headerStyle}>\n            <h1>Preview</h1>\n          </div>\n          <div\n            id=\"preview\"\n            className=\"output\"\n            style={outputStyle}\n            dangerouslySetInnerHTML={{\n              __html: marked(this.state.markdown, { renderer: new Renderer() }),\n            }}\n          />\n        </div>\n      </div>\n      </div>\n    );\n  }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}