{"ast":null,"code":"var _jsxFileName = \"/Users/bradleycronan/markdownPreviewerUpdate/src/App.js\";\nimport React from \"react\";\nimport { marked } from \"marked\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      markdown: `\n# Heading\n## Subheading\nThis is a [link](https://example.com).\n\nInline code: \\`console.log('Hello, world!')\\`\n\n\\`\\`\\`\n// Code block\nfunction greet(name) {\n  return \"Hello, \" + name + \"!\";\n}\n\\`\\`\\`\n\n- List item 1\n- List item 2\n\n> This is a blockquote.\n\n![Image](https://example.com/image.jpg)\n\n**This text is bold.**\n\n## Practical Examples\n\n### Creating a Function\n\nTo create a function in JavaScript, you can use the following syntax:\n\n\\`\\`\\`javascript\nfunction functionName(parameter1, parameter2) {\n  // Function body\n  // Do something with the parameters\n  return result;\n}\n\\`\\`\\`\n\n### Styling Text\n\nYou can style text using various Markdown syntax:\n\n- **Bold text**: Wrap the text with double asterisks (\\*\\*).\n- *Italic text*: Wrap the text with single asterisks (\\*).\n- ~~Strikethrough text~~: Wrap the text with double tildes (\\~\\~).\n\n### Creating a List\n\nTo create a list in Markdown, use hyphens (-) or asterisks (\\*) followed by a space:\n\n- List item 1\n- List item 2\n\n### Adding Links\n\nTo add a hyperlink, use the following syntax:\n\n\\[Link Text\\](https://example.com)\n\nReplace \"Link Text\" with the text you want to display and \"https://example.com\" with the actual URL.\n\n### Inserting Images\n\nTo insert an image, use the following syntax:\n\n\\!\\[Alt Text\\](https://example.com/image.jpg)\n\nReplace \"Alt Text\" with the alternative text for the image and \"https://example.com/image.jpg\" with the URL of the image.\n\nThese are just a few practical examples to demonstrate the usage of Markdown. You can explore more Markdown syntax and features to create richly formatted and informative content in your Markdown previewer.\n`\n    };\n    // Bind the methods to the component instance\n    this.updateMarkdown = this.updateMarkdown.bind(this);\n    this.resetMarkdown = this.resetMarkdown.bind(this);\n  }\n  componentDidMount() {\n    this.resetMarkdown();\n  }\n  updateMarkdown(markdown) {\n    this.setState({\n      markdown\n    });\n  }\n  resetMarkdown() {\n    this.setState({\n      markdown: this.state.markdown\n    });\n  }\n  render() {\n    const containerStyle = {\n      backgroundColor: \"black\",\n      fontFamily: \"'Courier Prime', monospace\",\n      color: \"#A87D19\"\n    };\n    const headerStyle = {\n      textAlign: \"center\",\n      marginTop: \"2rem\"\n    };\n    const buttonStyle = {\n      backgroundColor: \"black\",\n      color: \"#A87D19\",\n      fontFamily: \"'Courier Prime', monospace\",\n      marginTop: \"2rem\"\n    };\n    const inputStyle = {\n      width: \"50%\",\n      height: \"600px\",\n      padding: \"1rem\",\n      color: \"#A87D19\",\n      backgroundColor: \"black\",\n      border: \"none\",\n      borderStyle: \"dotted\",\n      overflow: \"auto\"\n    };\n    const outputStyle = {\n      width: \"50%\",\n      height: \"600px\",\n      padding: \"1rem\",\n      backgroundColor: \"black\",\n      borderStyle: \"dotted\",\n      overflow: \"auto\"\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: containerStyle,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row mt-4\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              style: headerStyle,\n              children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                children: \"Markdown Previewer\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                style: buttonStyle,\n                onClick: this.resetMarkdown,\n                children: \"Reset\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row mt-4 justify-content-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-6 col-sm-12\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: headerStyle,\n                children: /*#__PURE__*/_jsxDEV(\"h4\", {\n                  children: \"Markdown Input\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 151,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                id: \"editor\",\n                className: \"input\",\n                style: inputStyle,\n                value: this.state.markdown,\n                onChange: e => {\n                  this.updateMarkdown(e.target.value);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-6 col-sm-12\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: headerStyle,\n                children: /*#__PURE__*/_jsxDEV(\"h4\", {\n                  children: \"Preview\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 166,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                id: \"preview\",\n                className: \"output\",\n                style: outputStyle,\n                dangerouslySetInnerHTML: {\n                  __html: marked(this.state.markdown)\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this);\n  }\n}","map":{"version":3,"names":["React","marked","jsxDEV","_jsxDEV","App","Component","constructor","props","state","markdown","updateMarkdown","bind","resetMarkdown","componentDidMount","setState","render","containerStyle","backgroundColor","fontFamily","color","headerStyle","textAlign","marginTop","buttonStyle","inputStyle","width","height","padding","border","borderStyle","overflow","outputStyle","style","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","id","value","onChange","e","target","dangerouslySetInnerHTML","__html"],"sources":["/Users/bradleycronan/markdownPreviewerUpdate/src/App.js"],"sourcesContent":["import React from \"react\";\nimport {marked} from \"marked\";\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      markdown: `\n# Heading\n## Subheading\nThis is a [link](https://example.com).\n\nInline code: \\`console.log('Hello, world!')\\`\n\n\\`\\`\\`\n// Code block\nfunction greet(name) {\n  return \"Hello, \" + name + \"!\";\n}\n\\`\\`\\`\n\n- List item 1\n- List item 2\n\n> This is a blockquote.\n\n![Image](https://example.com/image.jpg)\n\n**This text is bold.**\n\n## Practical Examples\n\n### Creating a Function\n\nTo create a function in JavaScript, you can use the following syntax:\n\n\\`\\`\\`javascript\nfunction functionName(parameter1, parameter2) {\n  // Function body\n  // Do something with the parameters\n  return result;\n}\n\\`\\`\\`\n\n### Styling Text\n\nYou can style text using various Markdown syntax:\n\n- **Bold text**: Wrap the text with double asterisks (\\*\\*).\n- *Italic text*: Wrap the text with single asterisks (\\*).\n- ~~Strikethrough text~~: Wrap the text with double tildes (\\~\\~).\n\n### Creating a List\n\nTo create a list in Markdown, use hyphens (-) or asterisks (\\*) followed by a space:\n\n- List item 1\n- List item 2\n\n### Adding Links\n\nTo add a hyperlink, use the following syntax:\n\n\\[Link Text\\](https://example.com)\n\nReplace \"Link Text\" with the text you want to display and \"https://example.com\" with the actual URL.\n\n### Inserting Images\n\nTo insert an image, use the following syntax:\n\n\\!\\[Alt Text\\](https://example.com/image.jpg)\n\nReplace \"Alt Text\" with the alternative text for the image and \"https://example.com/image.jpg\" with the URL of the image.\n\nThese are just a few practical examples to demonstrate the usage of Markdown. You can explore more Markdown syntax and features to create richly formatted and informative content in your Markdown previewer.\n`,\n    };\n    // Bind the methods to the component instance\n    this.updateMarkdown = this.updateMarkdown.bind(this);\n    this.resetMarkdown = this.resetMarkdown.bind(this);\n  }\n\n  componentDidMount() {\n    this.resetMarkdown();\n  }\n\n  updateMarkdown(markdown) {\n    this.setState({ markdown });\n  }\n\n  resetMarkdown() {\n    this.setState({ markdown: this.state.markdown });\n  }\n\n  render() {\n    const containerStyle = {\n      backgroundColor: \"black\",\n      fontFamily: \"'Courier Prime', monospace\",\n      color: \"#A87D19\",\n    };\n\n    const headerStyle = {\n      textAlign: \"center\",\n      marginTop: \"2rem\",\n    };\n\n    const buttonStyle = {\n      backgroundColor: \"black\",\n      color: \"#A87D19\",\n      fontFamily: \"'Courier Prime', monospace\",\n      marginTop: \"2rem\",\n    };\n\n    const inputStyle = {\n      width: \"50%\",\n      height: \"600px\",\n      padding: \"1rem\",\n      color: \"#A87D19\",\n      backgroundColor: \"black\",\n      border: \"none\",\n      borderStyle: \"dotted\",\n      overflow: \"auto\",\n    };\n\n    const outputStyle = {\n      width: \"50%\",\n      height: \"600px\",\n      padding: \"1rem\",\n      backgroundColor: \"black\",\n      borderStyle: \"dotted\",\n      overflow: \"auto\",\n    };\n\n    return (\n      <div style={containerStyle}>\n        <div className=\"App\">\n          <div className=\"container\">\n            <div className=\"row mt-4\">\n              <div style={headerStyle}>\n                <h1>Markdown Previewer</h1>\n                <button style={buttonStyle} onClick={this.resetMarkdown}>\n                  Reset\n                </button>\n              </div>\n            </div>\n\n            <div className=\"row mt-4 justify-content-center\">\n              <div className=\"col-md-6 col-sm-12\">\n                <div style={headerStyle}>\n                  <h4>Markdown Input</h4>\n                </div>\n                <textarea\n                  id=\"editor\"\n                  className=\"input\"\n                  style={inputStyle}\n                  value={this.state.markdown}\n                  onChange={(e) => {\n                    this.updateMarkdown(e.target.value);\n                  }}\n                />\n              </div>\n\n              <div className=\"col-md-6 col-sm-12\">\n                <div style={headerStyle}>\n                  <h4>Preview</h4>\n                </div>\n                <div\n                  id=\"preview\"\n                  className=\"output\"\n                  style={outputStyle}\n                  dangerouslySetInnerHTML={{\n                    __html: marked(this.state.markdown),\n                  }}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}