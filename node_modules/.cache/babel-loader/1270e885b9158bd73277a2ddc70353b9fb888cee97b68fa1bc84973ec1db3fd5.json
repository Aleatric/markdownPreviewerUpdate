{"ast":null,"code":"var _jsxFileName = \"/Users/bradleycronan/Documents/Coding/2023/freeCodeCamp/Front End Dev projects/Markdown Previewer/markdown-previewer/src/App.js\";\nimport React from \"react\";\nimport { Renderer, Parser, Lexer } from \"marked\";\nimport { marked } from \"marked\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst myComponent = () => {\n  const textStyle = {\n    fontFamily: \"'Courier Prime', monospace\",\n    fontFamily: \"'Lato', sans-serif\"\n  };\n};\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      markdown: `# Heading\n## Subheading\n[Link](https://example.com)\nInline code: \\`console.log('Hello, world!')\\`\n\\`\\`\\`\n// Code block\nfunction greet(name) {\n  return \"Hello, \" + name + \"!\";\n}\n\\`\\`\\`\n- List item 1\n- List item 2\n> Blockquote\n![Image](https://example.com/image.jpg)\n**Bold text**`\n    };\n  }\n  updateMarkdown(markdown) {\n    this.setState({\n      markdown\n    });\n  }\n  componentDidMount() {\n    // Render default markdown in preview element\n    const previewElement = document.getElementById(\"preview\");\n    previewElement.innerHTML = marked(this.state.markdown);\n  }\n  componentDidUpdate() {\n    // Update preview element whenever markdown changes\n    const previewElement = document.getElementById(\"preview\");\n    previewElement.innerHTML = marked(this.state.markdown);\n  }\n  render() {\n    var inputStyle = {\n      width: \"40rem\",\n      height: \"70vh\",\n      marginLeft: \"auto\",\n      marginRight: \"auto\",\n      padding: \"10px\"\n    };\n    var outputStyle = {\n      width: \"35rem\",\n      height: \"50vh\",\n      backgroundColor: \"#DCDCDC\",\n      marginLeft: \"auto\",\n      marginRight: \"auto\",\n      padding: \"10px\"\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundColor: \"black\",\n        fontFamily: \"'Courier Prime', monospace\",\n        color: \"#A87D19\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row mt-4\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col text-center\",\n              children: /*#__PURE__*/_jsxDEV(\"h1\", {\n                children: \"Markdown Previewer\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row mt-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-6\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col text-center\",\n                children: /*#__PURE__*/_jsxDEV(\"h4\", {\n                  children: \"Markdown Input\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 82,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"input\",\n                style: inputStyle,\n                children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n                  id: \"editor\",\n                  className: \"input\",\n                  style: inputStyle,\n                  value: this.state.markdown,\n                  onChange: e => {\n                    this.updateMarkdown(e.target.value);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 85,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-6\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col text-center\",\n                children: /*#__PURE__*/_jsxDEV(\"h4\", {\n                  children: \"Preview\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 99,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                id: \"preview\",\n                style: outputStyle,\n                dangerouslySetInnerHTML: {\n                  __html: marked(this.state.markdown, {\n                    renderer: new Renderer()\n                  })\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this);\n  }\n}","map":{"version":3,"names":["React","Renderer","Parser","Lexer","marked","jsxDEV","_jsxDEV","myComponent","textStyle","fontFamily","App","Component","constructor","props","state","markdown","updateMarkdown","setState","componentDidMount","previewElement","document","getElementById","innerHTML","componentDidUpdate","render","inputStyle","width","height","marginLeft","marginRight","padding","outputStyle","backgroundColor","style","color","children","className","fileName","_jsxFileName","lineNumber","columnNumber","id","value","onChange","e","target","dangerouslySetInnerHTML","__html","renderer"],"sources":["/Users/bradleycronan/Documents/Coding/2023/freeCodeCamp/Front End Dev projects/Markdown Previewer/markdown-previewer/src/App.js"],"sourcesContent":["import React from \"react\";\nimport { Renderer, Parser, Lexer } from \"marked\";\nimport {marked} from \"marked\"\n\n\n\nconst myComponent = () => {\n  const textStyle = {\n    fontFamily: \"'Courier Prime', monospace\",\n    fontFamily: \"'Lato', sans-serif\",\n  };\n}\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      markdown: `# Heading\n## Subheading\n[Link](https://example.com)\nInline code: \\`console.log('Hello, world!')\\`\n\\`\\`\\`\n// Code block\nfunction greet(name) {\n  return \"Hello, \" + name + \"!\";\n}\n\\`\\`\\`\n- List item 1\n- List item 2\n> Blockquote\n![Image](https://example.com/image.jpg)\n**Bold text**`,\n    };\n  }\n\n  updateMarkdown(markdown) {\n    this.setState({ markdown });\n  }\n\n  componentDidMount() {\n    // Render default markdown in preview element\n    const previewElement = document.getElementById(\"preview\");\n    previewElement.innerHTML = marked(this.state.markdown);\n  }\n\n  componentDidUpdate() {\n    // Update preview element whenever markdown changes\n    const previewElement = document.getElementById(\"preview\");\n    previewElement.innerHTML = marked(this.state.markdown);\n  }\n\n  render() {\n    var inputStyle = {\n      width: \"40rem\",\n      height: \"70vh\",\n      marginLeft: \"auto\",\n      marginRight: \"auto\",\n      padding: \"10px\",\n    };\n    var outputStyle = {\n      width: \"35rem\",\n      height: \"50vh\",\n      backgroundColor: \"#DCDCDC\",\n      marginLeft: \"auto\",\n      marginRight: \"auto\",\n      padding: \"10px\",\n    };\n\n    return (\n      <div style={{backgroundColor: \"black\", fontFamily: \"'Courier Prime', monospace\", color: \"#A87D19\" }}>\n      <div className=\"App\">\n        <div className=\"container\">\n          <div className=\"row mt-4\">\n            <div className=\"col text-center\">\n              <h1>Markdown Previewer</h1>\n            </div>\n          </div>\n\n          <div className=\"row mt-4\">\n            <div className=\"col-md-6\">\n              <div className=\"col text-center\">\n                <h4>Markdown Input</h4>\n              </div>\n              <div className=\"input\" style={inputStyle}>\n                <textarea\n                  id=\"editor\"\n                  className=\"input\"\n                  style={inputStyle}\n                  value={this.state.markdown}\n                  onChange={(e) => {\n                    this.updateMarkdown(e.target.value);\n                  }}\n                />\n              </div>\n            </div>\n\n            <div className=\"col-md-6\">\n              <div className=\"col text-center\">\n                <h4>Preview</h4>\n              </div>\n              <div\n                id=\"preview\"\n                style={outputStyle}\n                dangerouslySetInnerHTML={{\n                  __html: marked(this.state.markdown, { renderer: new Renderer() }),\n                }}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n      </div>\n    );\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}