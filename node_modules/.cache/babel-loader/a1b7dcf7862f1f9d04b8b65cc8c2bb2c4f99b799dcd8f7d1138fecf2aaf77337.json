{"ast":null,"code":"var _jsxFileName = \"/Users/bradleycronan/markdownPreviewerUpdate/src/App.js\";\nimport React from \"react\";\nimport { marked, Renderer } from \"marked\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ndocument.body.style = 'background: black;';\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      initialMarkdown: `\n# Heading\n\n## Subheading\n\nThis is a [link](https://example.com).\n\nInline code: \\`console.log('Hello, world!')\\`\n\n\\`\\`\\`\n// Code block\nfunction greet(name) {\n  return \"Hello, \" + name + \"!\";\n}\n\\`\\`\\`\n\n- List item 1\n- List item 2\n\n> This is a blockquote.\n\n![Image](https://example.com/image.jpg)\n\n**This text is bold.**\n\n## Practical Examples\n\n### Creating a Function\n\nTo create a function in JavaScript, you can use the following syntax:\n\n\\`\\`\\`javascript\nfunction functionName(parameter1, parameter2) {\n  // Function body\n  // Do something with the parameters\n  return result;\n}\n\\`\\`\\`\n\n### Styling Text\n\nYou can style text using various Markdown syntax:\n\n- **Bold text**: Wrap the text with double asterisks (\\*\\*).\n- *Italic text*: Wrap the text with single asterisks (\\*).\n- ~~Strikethrough text~~: Wrap the text with double tildes (\\~\\~).\n\n### Creating a List\n\nTo create a list in Markdown, use hyphens (-) or asterisks (\\*) followed by a space:\n\n- List item 1\n- List item 2\n\n### Adding Links\n\nTo add a hyperlink, use the following syntax:\n\n\\[Link Text\\](https://example.com)\n\nReplace \"Link Text\" with the text you want to display and \"https://example.com\" with the actual URL.\n\n### Inserting Images\n\nTo insert an image, use the following syntax:\n\n\\!\\[Alt Text\\](https://example.com/image.jpg)\n\nReplace \"Alt Text\" with the alternative text for the image and \"https://example.com/image.jpg\" with the URL of the image.\n\nThese are just a few practical examples to demonstrate the usage of Markdown. You can explore more Markdown syntax and features to create richly formatted and informative content in your Markdown previewer.\n`,\n      markdown: \"\"\n    };\n  }\n  componentDidMount() {\n    this.resetMarkdown();\n  }\n  updateMarkdown(markdown) {\n    this.setState({\n      markdown\n    });\n  }\n  resetMarkdown() {\n    this.setState({\n      markdown: this.state.initialMarkdown\n    });\n  }\n  render() {\n    const inputStyle = {\n      width: \"50%\",\n      height: \"600px\",\n      padding: \"1rem\",\n      color: \"#A87D19\",\n      backgroundColor: \"black\",\n      border: \"none\",\n      borderStyle: \"dotted\",\n      overflow: \"auto\"\n    };\n    const outputStyle = {\n      width: \"50%\",\n      height: \"600px\",\n      padding: \"1rem\",\n      backgroundColor: \"black\",\n      borderStyle: \"dotted\",\n      overflow: \"auto\"\n    };\n    const buttonStyle = {\n      backgroundColor: \"black\",\n      fontFamily: \"'Courier Prime', monospace\",\n      color: \"#A87D19\",\n      marginTop: \"2rem\"\n    };\n    const containerStyle = {\n      backgroundColor: \"black\",\n      fontFamily: \"'Courier Prime', monospace\",\n      color: \"#A87D19\"\n    };\n    const headerStyle = {\n      textAlign: \"center\",\n      marginTop: \"2rem\"\n    };\n    const flexContainerStyle = {\n      display: \"flex\",\n      justifyContent: \"space-between\"\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: containerStyle,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row mt-4\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              style: headerStyle,\n              children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                children: \"Markdown Previewer\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                style: buttonStyle,\n                onClick: () => this.resetMarkdown(),\n                children: \"Reset\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row mt-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-6 col-sm-12\",\n              style: flexContainerStyle,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: headerStyle,\n                children: /*#__PURE__*/_jsxDEV(\"h4\", {\n                  children: \"Markdown Input\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 158,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                id: \"editor\",\n                className: \"input\",\n                style: inputStyle,\n                value: this.state.markdown,\n                onChange: e => {\n                  this.updateMarkdown(e.target.value);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-6 col-sm-12\",\n              style: flexContainerStyle,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col text-center\",\n                children: /*#__PURE__*/_jsxDEV(\"h4\", {\n                  children: \"Preview\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 173,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                id: \"preview\",\n                style: outputStyle,\n                dangerouslySetInnerHTML: {\n                  __html: marked(this.state.markdown, {\n                    renderer: new Renderer()\n                  })\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this);\n  }\n}","map":{"version":3,"names":["React","marked","Renderer","jsxDEV","_jsxDEV","document","body","style","App","Component","constructor","props","state","initialMarkdown","markdown","componentDidMount","resetMarkdown","updateMarkdown","setState","render","inputStyle","width","height","padding","color","backgroundColor","border","borderStyle","overflow","outputStyle","buttonStyle","fontFamily","marginTop","containerStyle","headerStyle","textAlign","flexContainerStyle","display","justifyContent","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","id","value","onChange","e","target","dangerouslySetInnerHTML","__html","renderer"],"sources":["/Users/bradleycronan/markdownPreviewerUpdate/src/App.js"],"sourcesContent":["import React from \"react\";\nimport { marked, Renderer } from \"marked\";\n\ndocument.body.style = 'background: black;';\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      initialMarkdown: `\n# Heading\n\n## Subheading\n\nThis is a [link](https://example.com).\n\nInline code: \\`console.log('Hello, world!')\\`\n\n\\`\\`\\`\n// Code block\nfunction greet(name) {\n  return \"Hello, \" + name + \"!\";\n}\n\\`\\`\\`\n\n- List item 1\n- List item 2\n\n> This is a blockquote.\n\n![Image](https://example.com/image.jpg)\n\n**This text is bold.**\n\n## Practical Examples\n\n### Creating a Function\n\nTo create a function in JavaScript, you can use the following syntax:\n\n\\`\\`\\`javascript\nfunction functionName(parameter1, parameter2) {\n  // Function body\n  // Do something with the parameters\n  return result;\n}\n\\`\\`\\`\n\n### Styling Text\n\nYou can style text using various Markdown syntax:\n\n- **Bold text**: Wrap the text with double asterisks (\\*\\*).\n- *Italic text*: Wrap the text with single asterisks (\\*).\n- ~~Strikethrough text~~: Wrap the text with double tildes (\\~\\~).\n\n### Creating a List\n\nTo create a list in Markdown, use hyphens (-) or asterisks (\\*) followed by a space:\n\n- List item 1\n- List item 2\n\n### Adding Links\n\nTo add a hyperlink, use the following syntax:\n\n\\[Link Text\\](https://example.com)\n\nReplace \"Link Text\" with the text you want to display and \"https://example.com\" with the actual URL.\n\n### Inserting Images\n\nTo insert an image, use the following syntax:\n\n\\!\\[Alt Text\\](https://example.com/image.jpg)\n\nReplace \"Alt Text\" with the alternative text for the image and \"https://example.com/image.jpg\" with the URL of the image.\n\nThese are just a few practical examples to demonstrate the usage of Markdown. You can explore more Markdown syntax and features to create richly formatted and informative content in your Markdown previewer.\n`,\n      markdown: \"\",\n    };\n  }\n\n  componentDidMount() {\n    this.resetMarkdown();\n  }\n\n  updateMarkdown(markdown) {\n    this.setState({ markdown });\n  }\n\n  resetMarkdown() {\n    this.setState({ markdown: this.state.initialMarkdown });\n  }\n\n  render() {\n    const inputStyle = {\n      width: \"50%\",\n      height: \"600px\",\n      padding: \"1rem\",\n      color: \"#A87D19\",\n      backgroundColor: \"black\",\n      border: \"none\",\n      borderStyle: \"dotted\",\n      overflow: \"auto\",\n    };\n\n    const outputStyle = {\n      width: \"50%\",\n      height: \"600px\",\n      padding: \"1rem\",\n      backgroundColor: \"black\",\n      borderStyle: \"dotted\",\n      overflow: \"auto\",\n    };\n\n    const buttonStyle = {\n      backgroundColor: \"black\",\n      fontFamily: \"'Courier Prime', monospace\",\n      color: \"#A87D19\",\n      marginTop: \"2rem\",\n    };\n\n    const containerStyle = {\n      backgroundColor: \"black\",\n      fontFamily: \"'Courier Prime', monospace\",\n      color: \"#A87D19\",\n    };\n\n    const headerStyle = {\n      textAlign: \"center\",\n      marginTop: \"2rem\",\n    };\n\n    const flexContainerStyle = {\n      display: \"flex\",\n      justifyContent: \"space-between\",\n    };\n\n    return (\n      <div style={containerStyle}>\n        <div className=\"App\">\n          <div className=\"container\">\n            <div className=\"row mt-4\">\n              <div style={headerStyle}>\n                <h1>Markdown Previewer</h1>\n                <button style={buttonStyle}onClick={() => this.resetMarkdown()}>\n                  Reset\n                  </button>\n              </div>\n            </div>\n\n            <div className=\"row mt-4\">\n              <div className=\"col-md-6 col-sm-12\" style={flexContainerStyle}>\n                <div style={headerStyle}>\n                  <h4>Markdown Input</h4>\n                </div>\n                <textarea\n                  id=\"editor\"\n                  className=\"input\"\n                  style={inputStyle}\n                  value={this.state.markdown}\n                  onChange={(e) => {\n                    this.updateMarkdown(e.target.value);\n                  }}\n                />\n              </div>\n\n              <div className=\"col-md-6 col-sm-12\" style={flexContainerStyle}>\n                <div className=\"col text-center\">\n                  <h4>Preview</h4>\n                </div>\n                <div\n                  id=\"preview\"\n                  style={outputStyle}\n                  dangerouslySetInnerHTML={{\n                    __html: marked(this.state.markdown, { renderer: new Renderer() }),\n                  }}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}